---
layout: post
title:  加密网络请求
date:   2015-07-17 11:14:46
categories: jekyll update
---

#### 1. iOS客户端加密过程

	App第一次登陆流程：
	用户输入密码，App把这些信息用RSA公钥加密：(用户名,密码,时间,mac,随机数)，并发送到服务器。 
	服务器用RSA私钥解密，判断时间（可以动态调整1天到7天），如果不在时间范围之内，则登陆失败。如果在时间范围之内，再调用coreservice判断用户名和密码。 
	这里判断时间，主要是防止攻击者截取到加密串后，可以长久地利用这个加密串来登陆。 

	如果服务器判断用户成功登陆，则用AES加密：(随机salt,用户名,客户端类型,时间)，以（用户名+Android/IOS/WP）为key，存到缓存里。再把加密结果返回给客户端。 
	客户端保存服务器返回的加密串 
	App自动登陆的流程：

	App发送保存的加密串到服务器，（加密串，用户名，mac，随机数）==>RSA公钥加密 
	服务器用RSA私钥解密，再用AES解密加密串，判断用户名是否一致。如果一致，再以（用户名+Android/IOS/WP）为key到缓存里查询。如果判断缓存中的salt值和客户端发送过来的一致，则用户登陆成功。否则登陆失败。 
	不用AES加密，用RSA公钥加密也是可以的。AES速度比RSA要快，RSA只能存储有限的数据


#### 2. 实践的加解密过程

	a.  首次登陆, 用户名+密码+通用信息(设备号等) AES 加密后, 序列化传输到服务器, 服务器 AES 解密后, 运行本地逻辑, 生成响应(响应头里含有token), AES 加密, 序列化后传输给客户端.
	客户端获取响应, AES 解密, 取出token, 保存到本地.

	b.  后台自动登陆, 请求头附带 token, 请求参数, 拼接请求地址, AES 加密, 序列化传输给服务器. 然后周而复始, 直到服务器重置token (比如每1小时重置一次), 或者客户端登出, 登出会删除本地token, 并且要求重新登录

	本地需要keychain保存一个登录令牌token, 类似于token的一个字符串, 这个字符串就是服务器的session_id

	[SSKeychain setPassword:skey forService:@"Service" account:@"account"];
	NSString *skey = [SSKeychain passwordForService:@"Service" account:@"account"];


[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help